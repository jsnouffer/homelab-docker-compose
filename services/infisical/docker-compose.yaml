version: "3.3"

services:
  db-migration:
    container_name: infisical-db-migration
    image: infisical/infisical:v0.147.1
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    command: npm run migration:latest
    networks:
      - traefik_proxy

  infisical:
    container_name: infisical-backend
    image: infisical/infisical:v0.147.1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.infisical.rule=Host(`infisical.jsnouff.net`)"
      - "traefik.http.routers.infisical.entrypoints=websecure"
      - "traefik.http.routers.infisical.tls.certresolver=cloudflare"
      - "traefik.http.routers.infisical.service=infisical"
      - "traefik.http.services.infisical.loadbalancer.server.port=8080"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      db-migration:
        condition: service_completed_successfully
    env_file: .env
    environment:
      - NODE_ENV=production
      - SITE_URL=https://infisical.jsnouff.net
      - REDIS_URL=redis://redis:6379
    restart: unless-stopped
    networks:
      - traefik_proxy

  redis:
    user: 1000:1000
    container_name: infisical-redis
    image: redis
    env_file: .env
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - './data/redis:/data'
    restart: unless-stopped
    networks:
      - traefik_proxy

  db:
    user: 1000:1000
    container_name: infisical-db
    image: postgres:16-alpine
    env_file: .env
    volumes:
      - './data/db:/var/lib/postgresql/data'
    restart: unless-stopped
    networks:
      - traefik_proxy
    healthcheck:
      test: "pg_isready --username=${POSTGRES_USER} && psql --username=${POSTGRES_USER} --list"
      interval: 5s
      timeout: 10s
      retries: 10

networks:
  traefik_proxy:
    name: traefik_proxy
    external: true